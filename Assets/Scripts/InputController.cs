//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/InputController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputController"",
    ""maps"": [
        {
            ""name"": ""Default"",
            ""id"": ""fca2100f-e1d2-4310-aff9-c1acbfd71040"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""f2dd6614-09b0-494b-8fb9-c5269fbeeac3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Ability"",
                    ""type"": ""Button"",
                    ""id"": ""f53fb1cb-d9e0-4ffa-b6e7-e0c4e7679f12"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Consumables"",
                    ""type"": ""Button"",
                    ""id"": ""aee8ce69-982e-42ad-b2ed-cc200aa55ff9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""ff0b8a19-2821-4fcd-a6bd-0b8a31578ddc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""319d1e79-29df-456b-92e1-bbee3c490617"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""40675cbe-6f12-47d4-b037-bfce017bfb73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Invent"",
                    ""type"": ""Button"",
                    ""id"": ""e9d688c1-04ce-4efd-9f83-df0785e2fb81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainMenu"",
                    ""type"": ""Button"",
                    ""id"": ""ea33e267-0276-4786-a40f-6ef44ce825bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExitBlock"",
                    ""type"": ""Button"",
                    ""id"": ""3b4bcca6-42dd-4208-a6c9-c3222c3286a8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jerk"",
                    ""type"": ""Button"",
                    ""id"": ""bceb2ea3-c01b-42bf-b944-0a6ea44d9977"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""d215030a-388e-4cc0-8884-7cda0295b650"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""011df503-4959-4631-ae73-fb0f2a9cc2e5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""68ee0993-f916-4b00-9b34-44915757291b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""84a3696a-9c70-4429-acbf-11193eaf7158"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""23f31aec-e628-46eb-a0ca-b63dd9ad2b6d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2ad2081d-7ece-48b0-b526-bb7245b8a93f"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54a64134-9463-49ef-9c25-c10de2868b39"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d70639ac-8a5e-43db-a6f8-40f2f11421d6"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8e14c2b-29b1-4e91-9c8f-85264cc77c45"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4cadf17c-44a4-4007-af83-24c82bf104ad"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12bb94df-9f2c-4dd8-b1b0-41424aa724e7"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Consumables"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb30b44c-661c-4707-95c2-c0c4ef38f67e"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Consumables"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e89bf88-97a9-4518-9186-a5f23031ad43"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d72c1f6-e48e-4e0c-8a7e-b931c210bca8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aea4d9c8-1d4d-40d3-9e79-fdf2c04dec8f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""806f72f8-ebe2-42ff-8387-f3541f2ac6f3"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Invent"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3f0a5f0-5f5c-4bd7-b466-d9e536cf42ce"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41fde1cd-e5e5-4ca9-a92d-c015471d19d5"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitBlock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09065244-54d4-4a19-9ffd-52502d448768"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jerk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Default
        m_Default = asset.FindActionMap("Default", throwIfNotFound: true);
        m_Default_Move = m_Default.FindAction("Move", throwIfNotFound: true);
        m_Default_Ability = m_Default.FindAction("Ability", throwIfNotFound: true);
        m_Default_Consumables = m_Default.FindAction("Consumables", throwIfNotFound: true);
        m_Default_Jump = m_Default.FindAction("Jump", throwIfNotFound: true);
        m_Default_Attack = m_Default.FindAction("Attack", throwIfNotFound: true);
        m_Default_Block = m_Default.FindAction("Block", throwIfNotFound: true);
        m_Default_Invent = m_Default.FindAction("Invent", throwIfNotFound: true);
        m_Default_MainMenu = m_Default.FindAction("MainMenu", throwIfNotFound: true);
        m_Default_ExitBlock = m_Default.FindAction("ExitBlock", throwIfNotFound: true);
        m_Default_Jerk = m_Default.FindAction("Jerk", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Default
    private readonly InputActionMap m_Default;
    private IDefaultActions m_DefaultActionsCallbackInterface;
    private readonly InputAction m_Default_Move;
    private readonly InputAction m_Default_Ability;
    private readonly InputAction m_Default_Consumables;
    private readonly InputAction m_Default_Jump;
    private readonly InputAction m_Default_Attack;
    private readonly InputAction m_Default_Block;
    private readonly InputAction m_Default_Invent;
    private readonly InputAction m_Default_MainMenu;
    private readonly InputAction m_Default_ExitBlock;
    private readonly InputAction m_Default_Jerk;
    public struct DefaultActions
    {
        private @InputController m_Wrapper;
        public DefaultActions(@InputController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Default_Move;
        public InputAction @Ability => m_Wrapper.m_Default_Ability;
        public InputAction @Consumables => m_Wrapper.m_Default_Consumables;
        public InputAction @Jump => m_Wrapper.m_Default_Jump;
        public InputAction @Attack => m_Wrapper.m_Default_Attack;
        public InputAction @Block => m_Wrapper.m_Default_Block;
        public InputAction @Invent => m_Wrapper.m_Default_Invent;
        public InputAction @MainMenu => m_Wrapper.m_Default_MainMenu;
        public InputAction @ExitBlock => m_Wrapper.m_Default_ExitBlock;
        public InputAction @Jerk => m_Wrapper.m_Default_Jerk;
        public InputActionMap Get() { return m_Wrapper.m_Default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
        public void SetCallbacks(IDefaultActions instance)
        {
            if (m_Wrapper.m_DefaultActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                @Ability.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAbility;
                @Ability.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAbility;
                @Ability.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAbility;
                @Consumables.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnConsumables;
                @Consumables.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnConsumables;
                @Consumables.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnConsumables;
                @Jump.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnJump;
                @Attack.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAttack;
                @Block.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnBlock;
                @Block.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnBlock;
                @Block.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnBlock;
                @Invent.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnInvent;
                @Invent.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnInvent;
                @Invent.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnInvent;
                @MainMenu.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMainMenu;
                @MainMenu.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMainMenu;
                @MainMenu.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMainMenu;
                @ExitBlock.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnExitBlock;
                @ExitBlock.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnExitBlock;
                @ExitBlock.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnExitBlock;
                @Jerk.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnJerk;
                @Jerk.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnJerk;
                @Jerk.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnJerk;
            }
            m_Wrapper.m_DefaultActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Ability.started += instance.OnAbility;
                @Ability.performed += instance.OnAbility;
                @Ability.canceled += instance.OnAbility;
                @Consumables.started += instance.OnConsumables;
                @Consumables.performed += instance.OnConsumables;
                @Consumables.canceled += instance.OnConsumables;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Block.started += instance.OnBlock;
                @Block.performed += instance.OnBlock;
                @Block.canceled += instance.OnBlock;
                @Invent.started += instance.OnInvent;
                @Invent.performed += instance.OnInvent;
                @Invent.canceled += instance.OnInvent;
                @MainMenu.started += instance.OnMainMenu;
                @MainMenu.performed += instance.OnMainMenu;
                @MainMenu.canceled += instance.OnMainMenu;
                @ExitBlock.started += instance.OnExitBlock;
                @ExitBlock.performed += instance.OnExitBlock;
                @ExitBlock.canceled += instance.OnExitBlock;
                @Jerk.started += instance.OnJerk;
                @Jerk.performed += instance.OnJerk;
                @Jerk.canceled += instance.OnJerk;
            }
        }
    }
    public DefaultActions @Default => new DefaultActions(this);
    public interface IDefaultActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnAbility(InputAction.CallbackContext context);
        void OnConsumables(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnBlock(InputAction.CallbackContext context);
        void OnInvent(InputAction.CallbackContext context);
        void OnMainMenu(InputAction.CallbackContext context);
        void OnExitBlock(InputAction.CallbackContext context);
        void OnJerk(InputAction.CallbackContext context);
    }
}
